// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Kidz.LincService {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="LincServiceSoap", Namespace="http://tempuri.org/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LincService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback updatePersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPeopleOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkinToSecureAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUpcomingEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback deletePersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKidsInCareOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getParentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPrintersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPersonByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSpouseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback nameLookupOperationCompleted;
        
        private System.Threading.SendOrPostCallback createMarriedRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback createParentRelationshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSecureAreasOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUnsecureAreasOperationCompleted;
        
        public LincService() {
            this.Url = "http://41.185.30.157/lincservice.asmx";
        }
        
        public LincService(string url) {
            this.Url = url;
        }
        
        public event updatePersonCompletedEventHandler updatePersonCompleted;
        
        public event getPeopleCompletedEventHandler getPeopleCompleted;
        
        public event checkinToSecureAreaCompletedEventHandler checkinToSecureAreaCompleted;
        
        public event getUpcomingEventsCompletedEventHandler getUpcomingEventsCompleted;
        
        public event deletePersonCompletedEventHandler deletePersonCompleted;
        
        public event getKidsInCareCompletedEventHandler getKidsInCareCompleted;
        
        public event getChildrenCompletedEventHandler getChildrenCompleted;
        
        public event getParentsCompletedEventHandler getParentsCompleted;
        
        public event getPersonCompletedEventHandler getPersonCompleted;
        
        public event getPrintersCompletedEventHandler getPrintersCompleted;
        
        public event getPersonByNameCompletedEventHandler getPersonByNameCompleted;
        
        public event getSpouseCompletedEventHandler getSpouseCompleted;
        
        public event getRolesCompletedEventHandler getRolesCompleted;
        
        public event nameLookupCompletedEventHandler nameLookupCompleted;
        
        public event createMarriedRelationshipCompletedEventHandler createMarriedRelationshipCompleted;
        
        public event createParentRelationshipCompletedEventHandler createParentRelationshipCompleted;
        
        public event getSecureAreasCompletedEventHandler getSecureAreasCompleted;
        
        public event getUnsecureAreasCompletedEventHandler getUnsecureAreasCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePerson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int updatePerson(int ID, int CampusID, string FirstName, string LastName, string Gender, System.DateTime DoB, string Comments, string Mobile, string EMail) {
            object[] results = this.Invoke("updatePerson", new object[] {
                        ID,
                        CampusID,
                        FirstName,
                        LastName,
                        Gender,
                        DoB,
                        Comments,
                        Mobile,
                        EMail});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginupdatePerson(int ID, int CampusID, string FirstName, string LastName, string Gender, System.DateTime DoB, string Comments, string Mobile, string EMail, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updatePerson", new object[] {
                        ID,
                        CampusID,
                        FirstName,
                        LastName,
                        Gender,
                        DoB,
                        Comments,
                        Mobile,
                        EMail}, callback, asyncState);
        }
        
        public int EndupdatePerson(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void updatePersonAsync(int ID, int CampusID, string FirstName, string LastName, string Gender, System.DateTime DoB, string Comments, string Mobile, string EMail) {
            this.updatePersonAsync(ID, CampusID, FirstName, LastName, Gender, DoB, Comments, Mobile, EMail, null);
        }
        
        public void updatePersonAsync(int ID, int CampusID, string FirstName, string LastName, string Gender, System.DateTime DoB, string Comments, string Mobile, string EMail, object userState) {
            if ((this.updatePersonOperationCompleted == null)) {
                this.updatePersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePersonCompleted);
            }
            this.InvokeAsync("updatePerson", new object[] {
                        ID,
                        CampusID,
                        FirstName,
                        LastName,
                        Gender,
                        DoB,
                        Comments,
                        Mobile,
                        EMail}, this.updatePersonOperationCompleted, userState);
        }
        
        private void OnupdatePersonCompleted(object arg) {
            if ((this.updatePersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePersonCompleted(this, new updatePersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPeople", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person[] getPeople(int CampusID) {
            object[] results = this.Invoke("getPeople", new object[] {
                        CampusID});
            return ((Person[])(results[0]));
        }
        
        public System.IAsyncResult BegingetPeople(int CampusID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPeople", new object[] {
                        CampusID}, callback, asyncState);
        }
        
        public Person[] EndgetPeople(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person[])(results[0]));
        }
        
        public void getPeopleAsync(int CampusID) {
            this.getPeopleAsync(CampusID, null);
        }
        
        public void getPeopleAsync(int CampusID, object userState) {
            if ((this.getPeopleOperationCompleted == null)) {
                this.getPeopleOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPeopleCompleted);
            }
            this.InvokeAsync("getPeople", new object[] {
                        CampusID}, this.getPeopleOperationCompleted, userState);
        }
        
        private void OngetPeopleCompleted(object arg) {
            if ((this.getPeopleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPeopleCompleted(this, new getPeopleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkinToSecureArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public bool checkinToSecureArea(int PersonID, int AreaID, int EventID, int InOut) {
            object[] results = this.Invoke("checkinToSecureArea", new object[] {
                        PersonID,
                        AreaID,
                        EventID,
                        InOut});
            return ((bool)(results[0]));
        }
        
        public System.IAsyncResult BegincheckinToSecureArea(int PersonID, int AreaID, int EventID, int InOut, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("checkinToSecureArea", new object[] {
                        PersonID,
                        AreaID,
                        EventID,
                        InOut}, callback, asyncState);
        }
        
        public bool EndcheckinToSecureArea(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        public void checkinToSecureAreaAsync(int PersonID, int AreaID, int EventID, int InOut) {
            this.checkinToSecureAreaAsync(PersonID, AreaID, EventID, InOut, null);
        }
        
        public void checkinToSecureAreaAsync(int PersonID, int AreaID, int EventID, int InOut, object userState) {
            if ((this.checkinToSecureAreaOperationCompleted == null)) {
                this.checkinToSecureAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckinToSecureAreaCompleted);
            }
            this.InvokeAsync("checkinToSecureArea", new object[] {
                        PersonID,
                        AreaID,
                        EventID,
                        InOut}, this.checkinToSecureAreaOperationCompleted, userState);
        }
        
        private void OncheckinToSecureAreaCompleted(object arg) {
            if ((this.checkinToSecureAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkinToSecureAreaCompleted(this, new checkinToSecureAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUpcomingEvents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Event[] getUpcomingEvents(int CampusID) {
            object[] results = this.Invoke("getUpcomingEvents", new object[] {
                        CampusID});
            return ((Event[])(results[0]));
        }
        
        public System.IAsyncResult BegingetUpcomingEvents(int CampusID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUpcomingEvents", new object[] {
                        CampusID}, callback, asyncState);
        }
        
        public Event[] EndgetUpcomingEvents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Event[])(results[0]));
        }
        
        public void getUpcomingEventsAsync(int CampusID) {
            this.getUpcomingEventsAsync(CampusID, null);
        }
        
        public void getUpcomingEventsAsync(int CampusID, object userState) {
            if ((this.getUpcomingEventsOperationCompleted == null)) {
                this.getUpcomingEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUpcomingEventsCompleted);
            }
            this.InvokeAsync("getUpcomingEvents", new object[] {
                        CampusID}, this.getUpcomingEventsOperationCompleted, userState);
        }
        
        private void OngetUpcomingEventsCompleted(object arg) {
            if ((this.getUpcomingEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUpcomingEventsCompleted(this, new getUpcomingEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deletePerson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void deletePerson(int PersonID) {
            this.Invoke("deletePerson", new object[] {
                        PersonID});
        }
        
        public System.IAsyncResult BegindeletePerson(int PersonID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("deletePerson", new object[] {
                        PersonID}, callback, asyncState);
        }
        
        public void EnddeletePerson(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void deletePersonAsync(int PersonID) {
            this.deletePersonAsync(PersonID, null);
        }
        
        public void deletePersonAsync(int PersonID, object userState) {
            if ((this.deletePersonOperationCompleted == null)) {
                this.deletePersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeletePersonCompleted);
            }
            this.InvokeAsync("deletePerson", new object[] {
                        PersonID}, this.deletePersonOperationCompleted, userState);
        }
        
        private void OndeletePersonCompleted(object arg) {
            if ((this.deletePersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deletePersonCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getKidsInCare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public CareInfo[] getKidsInCare(int Checkin, int EventID) {
            object[] results = this.Invoke("getKidsInCare", new object[] {
                        Checkin,
                        EventID});
            return ((CareInfo[])(results[0]));
        }
        
        public System.IAsyncResult BegingetKidsInCare(int Checkin, int EventID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getKidsInCare", new object[] {
                        Checkin,
                        EventID}, callback, asyncState);
        }
        
        public CareInfo[] EndgetKidsInCare(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CareInfo[])(results[0]));
        }
        
        public void getKidsInCareAsync(int Checkin, int EventID) {
            this.getKidsInCareAsync(Checkin, EventID, null);
        }
        
        public void getKidsInCareAsync(int Checkin, int EventID, object userState) {
            if ((this.getKidsInCareOperationCompleted == null)) {
                this.getKidsInCareOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKidsInCareCompleted);
            }
            this.InvokeAsync("getKidsInCare", new object[] {
                        Checkin,
                        EventID}, this.getKidsInCareOperationCompleted, userState);
        }
        
        private void OngetKidsInCareCompleted(object arg) {
            if ((this.getKidsInCareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKidsInCareCompleted(this, new getKidsInCareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getChildren", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person[] getChildren(int PersonID) {
            object[] results = this.Invoke("getChildren", new object[] {
                        PersonID});
            return ((Person[])(results[0]));
        }
        
        public System.IAsyncResult BegingetChildren(int PersonID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getChildren", new object[] {
                        PersonID}, callback, asyncState);
        }
        
        public Person[] EndgetChildren(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person[])(results[0]));
        }
        
        public void getChildrenAsync(int PersonID) {
            this.getChildrenAsync(PersonID, null);
        }
        
        public void getChildrenAsync(int PersonID, object userState) {
            if ((this.getChildrenOperationCompleted == null)) {
                this.getChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildrenCompleted);
            }
            this.InvokeAsync("getChildren", new object[] {
                        PersonID}, this.getChildrenOperationCompleted, userState);
        }
        
        private void OngetChildrenCompleted(object arg) {
            if ((this.getChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildrenCompleted(this, new getChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getParents", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person[] getParents(int PersonID) {
            object[] results = this.Invoke("getParents", new object[] {
                        PersonID});
            return ((Person[])(results[0]));
        }
        
        public System.IAsyncResult BegingetParents(int PersonID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getParents", new object[] {
                        PersonID}, callback, asyncState);
        }
        
        public Person[] EndgetParents(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person[])(results[0]));
        }
        
        public void getParentsAsync(int PersonID) {
            this.getParentsAsync(PersonID, null);
        }
        
        public void getParentsAsync(int PersonID, object userState) {
            if ((this.getParentsOperationCompleted == null)) {
                this.getParentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParentsCompleted);
            }
            this.InvokeAsync("getParents", new object[] {
                        PersonID}, this.getParentsOperationCompleted, userState);
        }
        
        private void OngetParentsCompleted(object arg) {
            if ((this.getParentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getParentsCompleted(this, new getParentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPerson", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person getPerson(int PersonID) {
            object[] results = this.Invoke("getPerson", new object[] {
                        PersonID});
            return ((Person)(results[0]));
        }
        
        public System.IAsyncResult BegingetPerson(int PersonID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPerson", new object[] {
                        PersonID}, callback, asyncState);
        }
        
        public Person EndgetPerson(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person)(results[0]));
        }
        
        public void getPersonAsync(int PersonID) {
            this.getPersonAsync(PersonID, null);
        }
        
        public void getPersonAsync(int PersonID, object userState) {
            if ((this.getPersonOperationCompleted == null)) {
                this.getPersonOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonCompleted);
            }
            this.InvokeAsync("getPerson", new object[] {
                        PersonID}, this.getPersonOperationCompleted, userState);
        }
        
        private void OngetPersonCompleted(object arg) {
            if ((this.getPersonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonCompleted(this, new getPersonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPrinters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Printer[] getPrinters(int CampusID) {
            object[] results = this.Invoke("getPrinters", new object[] {
                        CampusID});
            return ((Printer[])(results[0]));
        }
        
        public System.IAsyncResult BegingetPrinters(int CampusID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPrinters", new object[] {
                        CampusID}, callback, asyncState);
        }
        
        public Printer[] EndgetPrinters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Printer[])(results[0]));
        }
        
        public void getPrintersAsync(int CampusID) {
            this.getPrintersAsync(CampusID, null);
        }
        
        public void getPrintersAsync(int CampusID, object userState) {
            if ((this.getPrintersOperationCompleted == null)) {
                this.getPrintersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPrintersCompleted);
            }
            this.InvokeAsync("getPrinters", new object[] {
                        CampusID}, this.getPrintersOperationCompleted, userState);
        }
        
        private void OngetPrintersCompleted(object arg) {
            if ((this.getPrintersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPrintersCompleted(this, new getPrintersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPersonByName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person getPersonByName(string firstName, string lastName) {
            object[] results = this.Invoke("getPersonByName", new object[] {
                        firstName,
                        lastName});
            return ((Person)(results[0]));
        }
        
        public System.IAsyncResult BegingetPersonByName(string firstName, string lastName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPersonByName", new object[] {
                        firstName,
                        lastName}, callback, asyncState);
        }
        
        public Person EndgetPersonByName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person)(results[0]));
        }
        
        public void getPersonByNameAsync(string firstName, string lastName) {
            this.getPersonByNameAsync(firstName, lastName, null);
        }
        
        public void getPersonByNameAsync(string firstName, string lastName, object userState) {
            if ((this.getPersonByNameOperationCompleted == null)) {
                this.getPersonByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPersonByNameCompleted);
            }
            this.InvokeAsync("getPersonByName", new object[] {
                        firstName,
                        lastName}, this.getPersonByNameOperationCompleted, userState);
        }
        
        private void OngetPersonByNameCompleted(object arg) {
            if ((this.getPersonByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPersonByNameCompleted(this, new getPersonByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSpouse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person getSpouse(int PersonID) {
            object[] results = this.Invoke("getSpouse", new object[] {
                        PersonID});
            return ((Person)(results[0]));
        }
        
        public System.IAsyncResult BegingetSpouse(int PersonID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSpouse", new object[] {
                        PersonID}, callback, asyncState);
        }
        
        public Person EndgetSpouse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person)(results[0]));
        }
        
        public void getSpouseAsync(int PersonID) {
            this.getSpouseAsync(PersonID, null);
        }
        
        public void getSpouseAsync(int PersonID, object userState) {
            if ((this.getSpouseOperationCompleted == null)) {
                this.getSpouseOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSpouseCompleted);
            }
            this.InvokeAsync("getSpouse", new object[] {
                        PersonID}, this.getSpouseOperationCompleted, userState);
        }
        
        private void OngetSpouseCompleted(object arg) {
            if ((this.getSpouseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSpouseCompleted(this, new getSpouseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Role[] getRoles(int CampusID) {
            object[] results = this.Invoke("getRoles", new object[] {
                        CampusID});
            return ((Role[])(results[0]));
        }
        
        public System.IAsyncResult BegingetRoles(int CampusID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getRoles", new object[] {
                        CampusID}, callback, asyncState);
        }
        
        public Role[] EndgetRoles(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Role[])(results[0]));
        }
        
        public void getRolesAsync(int CampusID) {
            this.getRolesAsync(CampusID, null);
        }
        
        public void getRolesAsync(int CampusID, object userState) {
            if ((this.getRolesOperationCompleted == null)) {
                this.getRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRolesCompleted);
            }
            this.InvokeAsync("getRoles", new object[] {
                        CampusID}, this.getRolesOperationCompleted, userState);
        }
        
        private void OngetRolesCompleted(object arg) {
            if ((this.getRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRolesCompleted(this, new getRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/nameLookup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Person[] nameLookup(string firstName, string lastName) {
            object[] results = this.Invoke("nameLookup", new object[] {
                        firstName,
                        lastName});
            return ((Person[])(results[0]));
        }
        
        public System.IAsyncResult BeginnameLookup(string firstName, string lastName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("nameLookup", new object[] {
                        firstName,
                        lastName}, callback, asyncState);
        }
        
        public Person[] EndnameLookup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Person[])(results[0]));
        }
        
        public void nameLookupAsync(string firstName, string lastName) {
            this.nameLookupAsync(firstName, lastName, null);
        }
        
        public void nameLookupAsync(string firstName, string lastName, object userState) {
            if ((this.nameLookupOperationCompleted == null)) {
                this.nameLookupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnameLookupCompleted);
            }
            this.InvokeAsync("nameLookup", new object[] {
                        firstName,
                        lastName}, this.nameLookupOperationCompleted, userState);
        }
        
        private void OnnameLookupCompleted(object arg) {
            if ((this.nameLookupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nameLookupCompleted(this, new nameLookupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createMarriedRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int createMarriedRelationship(int spouseID1, int spouseID2) {
            object[] results = this.Invoke("createMarriedRelationship", new object[] {
                        spouseID1,
                        spouseID2});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BegincreateMarriedRelationship(int spouseID1, int spouseID2, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createMarriedRelationship", new object[] {
                        spouseID1,
                        spouseID2}, callback, asyncState);
        }
        
        public int EndcreateMarriedRelationship(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void createMarriedRelationshipAsync(int spouseID1, int spouseID2) {
            this.createMarriedRelationshipAsync(spouseID1, spouseID2, null);
        }
        
        public void createMarriedRelationshipAsync(int spouseID1, int spouseID2, object userState) {
            if ((this.createMarriedRelationshipOperationCompleted == null)) {
                this.createMarriedRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateMarriedRelationshipCompleted);
            }
            this.InvokeAsync("createMarriedRelationship", new object[] {
                        spouseID1,
                        spouseID2}, this.createMarriedRelationshipOperationCompleted, userState);
        }
        
        private void OncreateMarriedRelationshipCompleted(object arg) {
            if ((this.createMarriedRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createMarriedRelationshipCompleted(this, new createMarriedRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createParentRelationship", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int createParentRelationship(int MarriedRelationshipID, int ChildID, bool IsTemporary) {
            object[] results = this.Invoke("createParentRelationship", new object[] {
                        MarriedRelationshipID,
                        ChildID,
                        IsTemporary});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BegincreateParentRelationship(int MarriedRelationshipID, int ChildID, bool IsTemporary, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("createParentRelationship", new object[] {
                        MarriedRelationshipID,
                        ChildID,
                        IsTemporary}, callback, asyncState);
        }
        
        public int EndcreateParentRelationship(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void createParentRelationshipAsync(int MarriedRelationshipID, int ChildID, bool IsTemporary) {
            this.createParentRelationshipAsync(MarriedRelationshipID, ChildID, IsTemporary, null);
        }
        
        public void createParentRelationshipAsync(int MarriedRelationshipID, int ChildID, bool IsTemporary, object userState) {
            if ((this.createParentRelationshipOperationCompleted == null)) {
                this.createParentRelationshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateParentRelationshipCompleted);
            }
            this.InvokeAsync("createParentRelationship", new object[] {
                        MarriedRelationshipID,
                        ChildID,
                        IsTemporary}, this.createParentRelationshipOperationCompleted, userState);
        }
        
        private void OncreateParentRelationshipCompleted(object arg) {
            if ((this.createParentRelationshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createParentRelationshipCompleted(this, new createParentRelationshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getSecureAreas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Area[] getSecureAreas(int CampusID) {
            object[] results = this.Invoke("getSecureAreas", new object[] {
                        CampusID});
            return ((Area[])(results[0]));
        }
        
        public System.IAsyncResult BegingetSecureAreas(int CampusID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getSecureAreas", new object[] {
                        CampusID}, callback, asyncState);
        }
        
        public Area[] EndgetSecureAreas(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Area[])(results[0]));
        }
        
        public void getSecureAreasAsync(int CampusID) {
            this.getSecureAreasAsync(CampusID, null);
        }
        
        public void getSecureAreasAsync(int CampusID, object userState) {
            if ((this.getSecureAreasOperationCompleted == null)) {
                this.getSecureAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSecureAreasCompleted);
            }
            this.InvokeAsync("getSecureAreas", new object[] {
                        CampusID}, this.getSecureAreasOperationCompleted, userState);
        }
        
        private void OngetSecureAreasCompleted(object arg) {
            if ((this.getSecureAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSecureAreasCompleted(this, new getSecureAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnsecureAreas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public Area[] getUnsecureAreas(int CampusID) {
            object[] results = this.Invoke("getUnsecureAreas", new object[] {
                        CampusID});
            return ((Area[])(results[0]));
        }
        
        public System.IAsyncResult BegingetUnsecureAreas(int CampusID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getUnsecureAreas", new object[] {
                        CampusID}, callback, asyncState);
        }
        
        public Area[] EndgetUnsecureAreas(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Area[])(results[0]));
        }
        
        public void getUnsecureAreasAsync(int CampusID) {
            this.getUnsecureAreasAsync(CampusID, null);
        }
        
        public void getUnsecureAreasAsync(int CampusID, object userState) {
            if ((this.getUnsecureAreasOperationCompleted == null)) {
                this.getUnsecureAreasOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUnsecureAreasCompleted);
            }
            this.InvokeAsync("getUnsecureAreas", new object[] {
                        CampusID}, this.getUnsecureAreasOperationCompleted, userState);
        }
        
        private void OngetUnsecureAreasCompleted(object arg) {
            if ((this.getUnsecureAreasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUnsecureAreasCompleted(this, new getUnsecureAreasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Person {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int CampusID;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string Gender;
        
        /// <remarks/>
        public System.DateTime DoB;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string Mobile;
        
        /// <remarks/>
        public string EMail;
        
        /// <remarks/>
        public bool IsTemporary;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Event {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int CampusID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public System.DateTime StartDate;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CareInfo {
        
        /// <remarks/>
        public string ClassName;
        
        /// <remarks/>
        public string ChildName;
        
        /// <remarks/>
        public string Gender;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public System.DateTime InStamp;
        
        /// <remarks/>
        public System.DateTime OutStamp;
        
        /// <remarks/>
        public int PersonID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Printer {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int CampusID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public string Path;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Role {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int ParentRoleID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public int CampusID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Area {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int CampusID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public bool IsSecure;
    }
    
    public partial class updatePersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void updatePersonCompletedEventHandler(object sender, updatePersonCompletedEventArgs args);
    
    public partial class getPeopleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPeopleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person[])(this.results[0]));
            }
        }
    }
    
    public delegate void getPeopleCompletedEventHandler(object sender, getPeopleCompletedEventArgs args);
    
    public partial class checkinToSecureAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkinToSecureAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public delegate void checkinToSecureAreaCompletedEventHandler(object sender, checkinToSecureAreaCompletedEventArgs args);
    
    public partial class getUpcomingEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUpcomingEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Event[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Event[])(this.results[0]));
            }
        }
    }
    
    public delegate void getUpcomingEventsCompletedEventHandler(object sender, getUpcomingEventsCompletedEventArgs args);
    
    public delegate void deletePersonCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public partial class getKidsInCareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKidsInCareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CareInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CareInfo[])(this.results[0]));
            }
        }
    }
    
    public delegate void getKidsInCareCompletedEventHandler(object sender, getKidsInCareCompletedEventArgs args);
    
    public partial class getChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person[])(this.results[0]));
            }
        }
    }
    
    public delegate void getChildrenCompletedEventHandler(object sender, getChildrenCompletedEventArgs args);
    
    public partial class getParentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getParentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person[])(this.results[0]));
            }
        }
    }
    
    public delegate void getParentsCompletedEventHandler(object sender, getParentsCompletedEventArgs args);
    
    public partial class getPersonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person)(this.results[0]));
            }
        }
    }
    
    public delegate void getPersonCompletedEventHandler(object sender, getPersonCompletedEventArgs args);
    
    public partial class getPrintersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPrintersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Printer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Printer[])(this.results[0]));
            }
        }
    }
    
    public delegate void getPrintersCompletedEventHandler(object sender, getPrintersCompletedEventArgs args);
    
    public partial class getPersonByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPersonByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person)(this.results[0]));
            }
        }
    }
    
    public delegate void getPersonByNameCompletedEventHandler(object sender, getPersonByNameCompletedEventArgs args);
    
    public partial class getSpouseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSpouseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person)(this.results[0]));
            }
        }
    }
    
    public delegate void getSpouseCompletedEventHandler(object sender, getSpouseCompletedEventArgs args);
    
    public partial class getRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Role[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Role[])(this.results[0]));
            }
        }
    }
    
    public delegate void getRolesCompletedEventHandler(object sender, getRolesCompletedEventArgs args);
    
    public partial class nameLookupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nameLookupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Person[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Person[])(this.results[0]));
            }
        }
    }
    
    public delegate void nameLookupCompletedEventHandler(object sender, nameLookupCompletedEventArgs args);
    
    public partial class createMarriedRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createMarriedRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void createMarriedRelationshipCompletedEventHandler(object sender, createMarriedRelationshipCompletedEventArgs args);
    
    public partial class createParentRelationshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createParentRelationshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void createParentRelationshipCompletedEventHandler(object sender, createParentRelationshipCompletedEventArgs args);
    
    public partial class getSecureAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSecureAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Area[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Area[])(this.results[0]));
            }
        }
    }
    
    public delegate void getSecureAreasCompletedEventHandler(object sender, getSecureAreasCompletedEventArgs args);
    
    public partial class getUnsecureAreasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUnsecureAreasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Area[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Area[])(this.results[0]));
            }
        }
    }
    
    public delegate void getUnsecureAreasCompletedEventHandler(object sender, getUnsecureAreasCompletedEventArgs args);
}
