// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.17020
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Kidz.PrintService {
    
    
    /// <remarks/>
    [System.Web.Services.WebServiceBinding(Name="LincSoap", Namespace="http://tempuri.org/")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Linc : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getHouseholdsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintBirthdayLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintBirthdayLabel_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHouseholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChildrenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getChildOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateHouseholdOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateChildOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintChildLabel_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintChildLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintParentLabelOperationCompleted;
        
        private System.Threading.SendOrPostCallback PrintParentLabel_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClassesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInOperationCompleted;
        
        private System.Threading.SendOrPostCallback getKidsInCareOperationCompleted;
        
        public Linc() {
            this.Url = "http://192.168.1.229/linc.asmx";
        }
        
        public Linc(string url) {
            this.Url = url;
        }
        
        public event getHouseholdsCompletedEventHandler getHouseholdsCompleted;
        
        public event PrintBirthdayLabelCompletedEventHandler PrintBirthdayLabelCompleted;
        
        public event PrintBirthdayLabel_NewCompletedEventHandler PrintBirthdayLabel_NewCompleted;
        
        public event getHouseholdCompletedEventHandler getHouseholdCompleted;
        
        public event getChildrenCompletedEventHandler getChildrenCompleted;
        
        public event getChildCompletedEventHandler getChildCompleted;
        
        public event updateHouseholdCompletedEventHandler updateHouseholdCompleted;
        
        public event updateChildCompletedEventHandler updateChildCompleted;
        
        public event PrintChildLabel_NewCompletedEventHandler PrintChildLabel_NewCompleted;
        
        public event PrintChildLabelCompletedEventHandler PrintChildLabelCompleted;
        
        public event PrintParentLabelCompletedEventHandler PrintParentLabelCompleted;
        
        public event PrintParentLabel_NewCompletedEventHandler PrintParentLabel_NewCompleted;
        
        public event getClassesCompletedEventHandler getClassesCompleted;
        
        public event CheckInCompletedEventHandler CheckInCompleted;
        
        public event getKidsInCareCompletedEventHandler getKidsInCareCompleted;
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHouseholds", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public HouseholdInfo[] getHouseholds() {
            object[] results = this.Invoke("getHouseholds", new object[0]);
            return ((HouseholdInfo[])(results[0]));
        }
        
        public System.IAsyncResult BegingetHouseholds(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHouseholds", new object[0], callback, asyncState);
        }
        
        public HouseholdInfo[] EndgetHouseholds(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HouseholdInfo[])(results[0]));
        }
        
        public void getHouseholdsAsync() {
            this.getHouseholdsAsync(null);
        }
        
        public void getHouseholdsAsync(object userState) {
            if ((this.getHouseholdsOperationCompleted == null)) {
                this.getHouseholdsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHouseholdsCompleted);
            }
            this.InvokeAsync("getHouseholds", new object[0], this.getHouseholdsOperationCompleted, userState);
        }
        
        private void OngetHouseholdsCompleted(object arg) {
            if ((this.getHouseholdsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHouseholdsCompleted(this, new getHouseholdsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintBirthdayLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void PrintBirthdayLabel(int ChildID) {
            this.Invoke("PrintBirthdayLabel", new object[] {
                        ChildID});
        }
        
        public System.IAsyncResult BeginPrintBirthdayLabel(int ChildID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintBirthdayLabel", new object[] {
                        ChildID}, callback, asyncState);
        }
        
        public void EndPrintBirthdayLabel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void PrintBirthdayLabelAsync(int ChildID) {
            this.PrintBirthdayLabelAsync(ChildID, null);
        }
        
        public void PrintBirthdayLabelAsync(int ChildID, object userState) {
            if ((this.PrintBirthdayLabelOperationCompleted == null)) {
                this.PrintBirthdayLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintBirthdayLabelCompleted);
            }
            this.InvokeAsync("PrintBirthdayLabel", new object[] {
                        ChildID}, this.PrintBirthdayLabelOperationCompleted, userState);
        }
        
        private void OnPrintBirthdayLabelCompleted(object arg) {
            if ((this.PrintBirthdayLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintBirthdayLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintBirthdayLabel_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void PrintBirthdayLabel_New(Person child, string printer) {
            this.Invoke("PrintBirthdayLabel_New", new object[] {
                        child,
                        printer});
        }
        
        public System.IAsyncResult BeginPrintBirthdayLabel_New(Person child, string printer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintBirthdayLabel_New", new object[] {
                        child,
                        printer}, callback, asyncState);
        }
        
        public void EndPrintBirthdayLabel_New(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void PrintBirthdayLabel_NewAsync(Person child, string printer) {
            this.PrintBirthdayLabel_NewAsync(child, printer, null);
        }
        
        public void PrintBirthdayLabel_NewAsync(Person child, string printer, object userState) {
            if ((this.PrintBirthdayLabel_NewOperationCompleted == null)) {
                this.PrintBirthdayLabel_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintBirthdayLabel_NewCompleted);
            }
            this.InvokeAsync("PrintBirthdayLabel_New", new object[] {
                        child,
                        printer}, this.PrintBirthdayLabel_NewOperationCompleted, userState);
        }
        
        private void OnPrintBirthdayLabel_NewCompleted(object arg) {
            if ((this.PrintBirthdayLabel_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintBirthdayLabel_NewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getHousehold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public HouseholdInfo getHousehold(int HouseholdID) {
            object[] results = this.Invoke("getHousehold", new object[] {
                        HouseholdID});
            return ((HouseholdInfo)(results[0]));
        }
        
        public System.IAsyncResult BegingetHousehold(int HouseholdID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getHousehold", new object[] {
                        HouseholdID}, callback, asyncState);
        }
        
        public HouseholdInfo EndgetHousehold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((HouseholdInfo)(results[0]));
        }
        
        public void getHouseholdAsync(int HouseholdID) {
            this.getHouseholdAsync(HouseholdID, null);
        }
        
        public void getHouseholdAsync(int HouseholdID, object userState) {
            if ((this.getHouseholdOperationCompleted == null)) {
                this.getHouseholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHouseholdCompleted);
            }
            this.InvokeAsync("getHousehold", new object[] {
                        HouseholdID}, this.getHouseholdOperationCompleted, userState);
        }
        
        private void OngetHouseholdCompleted(object arg) {
            if ((this.getHouseholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHouseholdCompleted(this, new getHouseholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getChildren", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public ChildrenInfo[] getChildren(int HouseholdID) {
            object[] results = this.Invoke("getChildren", new object[] {
                        HouseholdID});
            return ((ChildrenInfo[])(results[0]));
        }
        
        public System.IAsyncResult BegingetChildren(int HouseholdID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getChildren", new object[] {
                        HouseholdID}, callback, asyncState);
        }
        
        public ChildrenInfo[] EndgetChildren(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChildrenInfo[])(results[0]));
        }
        
        public void getChildrenAsync(int HouseholdID) {
            this.getChildrenAsync(HouseholdID, null);
        }
        
        public void getChildrenAsync(int HouseholdID, object userState) {
            if ((this.getChildrenOperationCompleted == null)) {
                this.getChildrenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildrenCompleted);
            }
            this.InvokeAsync("getChildren", new object[] {
                        HouseholdID}, this.getChildrenOperationCompleted, userState);
        }
        
        private void OngetChildrenCompleted(object arg) {
            if ((this.getChildrenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildrenCompleted(this, new getChildrenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getChild", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public ChildrenInfo getChild(int ChildID) {
            object[] results = this.Invoke("getChild", new object[] {
                        ChildID});
            return ((ChildrenInfo)(results[0]));
        }
        
        public System.IAsyncResult BegingetChild(int ChildID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getChild", new object[] {
                        ChildID}, callback, asyncState);
        }
        
        public ChildrenInfo EndgetChild(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ChildrenInfo)(results[0]));
        }
        
        public void getChildAsync(int ChildID) {
            this.getChildAsync(ChildID, null);
        }
        
        public void getChildAsync(int ChildID, object userState) {
            if ((this.getChildOperationCompleted == null)) {
                this.getChildOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildCompleted);
            }
            this.InvokeAsync("getChild", new object[] {
                        ChildID}, this.getChildOperationCompleted, userState);
        }
        
        private void OngetChildCompleted(object arg) {
            if ((this.getChildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getChildCompleted(this, new getChildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateHousehold", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int updateHousehold(int ID, string HeadSurname, string HeadFirstNames, string HeadMobile, string HeadEMail, string SpouseSurname, string SpouseFirstNames, string SpouseMobile, string SpouseEMail) {
            object[] results = this.Invoke("updateHousehold", new object[] {
                        ID,
                        HeadSurname,
                        HeadFirstNames,
                        HeadMobile,
                        HeadEMail,
                        SpouseSurname,
                        SpouseFirstNames,
                        SpouseMobile,
                        SpouseEMail});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginupdateHousehold(int ID, string HeadSurname, string HeadFirstNames, string HeadMobile, string HeadEMail, string SpouseSurname, string SpouseFirstNames, string SpouseMobile, string SpouseEMail, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateHousehold", new object[] {
                        ID,
                        HeadSurname,
                        HeadFirstNames,
                        HeadMobile,
                        HeadEMail,
                        SpouseSurname,
                        SpouseFirstNames,
                        SpouseMobile,
                        SpouseEMail}, callback, asyncState);
        }
        
        public int EndupdateHousehold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void updateHouseholdAsync(int ID, string HeadSurname, string HeadFirstNames, string HeadMobile, string HeadEMail, string SpouseSurname, string SpouseFirstNames, string SpouseMobile, string SpouseEMail) {
            this.updateHouseholdAsync(ID, HeadSurname, HeadFirstNames, HeadMobile, HeadEMail, SpouseSurname, SpouseFirstNames, SpouseMobile, SpouseEMail, null);
        }
        
        public void updateHouseholdAsync(int ID, string HeadSurname, string HeadFirstNames, string HeadMobile, string HeadEMail, string SpouseSurname, string SpouseFirstNames, string SpouseMobile, string SpouseEMail, object userState) {
            if ((this.updateHouseholdOperationCompleted == null)) {
                this.updateHouseholdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateHouseholdCompleted);
            }
            this.InvokeAsync("updateHousehold", new object[] {
                        ID,
                        HeadSurname,
                        HeadFirstNames,
                        HeadMobile,
                        HeadEMail,
                        SpouseSurname,
                        SpouseFirstNames,
                        SpouseMobile,
                        SpouseEMail}, this.updateHouseholdOperationCompleted, userState);
        }
        
        private void OnupdateHouseholdCompleted(object arg) {
            if ((this.updateHouseholdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateHouseholdCompleted(this, new updateHouseholdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateChild", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public int updateChild(int ID, int HouseholdID, string FirstNames, string Surname, System.DateTime DoB, string Gender, string Comments, int GradeIndex) {
            object[] results = this.Invoke("updateChild", new object[] {
                        ID,
                        HouseholdID,
                        FirstNames,
                        Surname,
                        DoB,
                        Gender,
                        Comments,
                        GradeIndex});
            return ((int)(results[0]));
        }
        
        public System.IAsyncResult BeginupdateChild(int ID, int HouseholdID, string FirstNames, string Surname, System.DateTime DoB, string Gender, string Comments, int GradeIndex, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("updateChild", new object[] {
                        ID,
                        HouseholdID,
                        FirstNames,
                        Surname,
                        DoB,
                        Gender,
                        Comments,
                        GradeIndex}, callback, asyncState);
        }
        
        public int EndupdateChild(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        public void updateChildAsync(int ID, int HouseholdID, string FirstNames, string Surname, System.DateTime DoB, string Gender, string Comments, int GradeIndex) {
            this.updateChildAsync(ID, HouseholdID, FirstNames, Surname, DoB, Gender, Comments, GradeIndex, null);
        }
        
        public void updateChildAsync(int ID, int HouseholdID, string FirstNames, string Surname, System.DateTime DoB, string Gender, string Comments, int GradeIndex, object userState) {
            if ((this.updateChildOperationCompleted == null)) {
                this.updateChildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateChildCompleted);
            }
            this.InvokeAsync("updateChild", new object[] {
                        ID,
                        HouseholdID,
                        FirstNames,
                        Surname,
                        DoB,
                        Gender,
                        Comments,
                        GradeIndex}, this.updateChildOperationCompleted, userState);
        }
        
        private void OnupdateChildCompleted(object arg) {
            if ((this.updateChildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateChildCompleted(this, new updateChildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintChildLabel_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void PrintChildLabel_New(Person child, string printer) {
            this.Invoke("PrintChildLabel_New", new object[] {
                        child,
                        printer});
        }
        
        public System.IAsyncResult BeginPrintChildLabel_New(Person child, string printer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintChildLabel_New", new object[] {
                        child,
                        printer}, callback, asyncState);
        }
        
        public void EndPrintChildLabel_New(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void PrintChildLabel_NewAsync(Person child, string printer) {
            this.PrintChildLabel_NewAsync(child, printer, null);
        }
        
        public void PrintChildLabel_NewAsync(Person child, string printer, object userState) {
            if ((this.PrintChildLabel_NewOperationCompleted == null)) {
                this.PrintChildLabel_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintChildLabel_NewCompleted);
            }
            this.InvokeAsync("PrintChildLabel_New", new object[] {
                        child,
                        printer}, this.PrintChildLabel_NewOperationCompleted, userState);
        }
        
        private void OnPrintChildLabel_NewCompleted(object arg) {
            if ((this.PrintChildLabel_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintChildLabel_NewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintChildLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void PrintChildLabel(int ChildID) {
            this.Invoke("PrintChildLabel", new object[] {
                        ChildID});
        }
        
        public System.IAsyncResult BeginPrintChildLabel(int ChildID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintChildLabel", new object[] {
                        ChildID}, callback, asyncState);
        }
        
        public void EndPrintChildLabel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void PrintChildLabelAsync(int ChildID) {
            this.PrintChildLabelAsync(ChildID, null);
        }
        
        public void PrintChildLabelAsync(int ChildID, object userState) {
            if ((this.PrintChildLabelOperationCompleted == null)) {
                this.PrintChildLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintChildLabelCompleted);
            }
            this.InvokeAsync("PrintChildLabel", new object[] {
                        ChildID}, this.PrintChildLabelOperationCompleted, userState);
        }
        
        private void OnPrintChildLabelCompleted(object arg) {
            if ((this.PrintChildLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintChildLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintParentLabel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void PrintParentLabel(int HouseholdID) {
            this.Invoke("PrintParentLabel", new object[] {
                        HouseholdID});
        }
        
        public System.IAsyncResult BeginPrintParentLabel(int HouseholdID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintParentLabel", new object[] {
                        HouseholdID}, callback, asyncState);
        }
        
        public void EndPrintParentLabel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void PrintParentLabelAsync(int HouseholdID) {
            this.PrintParentLabelAsync(HouseholdID, null);
        }
        
        public void PrintParentLabelAsync(int HouseholdID, object userState) {
            if ((this.PrintParentLabelOperationCompleted == null)) {
                this.PrintParentLabelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintParentLabelCompleted);
            }
            this.InvokeAsync("PrintParentLabel", new object[] {
                        HouseholdID}, this.PrintParentLabelOperationCompleted, userState);
        }
        
        private void OnPrintParentLabelCompleted(object arg) {
            if ((this.PrintParentLabelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintParentLabelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintParentLabel_New", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public void PrintParentLabel_New(Person parent1, Person parent2, string printer) {
            this.Invoke("PrintParentLabel_New", new object[] {
                        parent1,
                        parent2,
                        printer});
        }
        
        public System.IAsyncResult BeginPrintParentLabel_New(Person parent1, Person parent2, string printer, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PrintParentLabel_New", new object[] {
                        parent1,
                        parent2,
                        printer}, callback, asyncState);
        }
        
        public void EndPrintParentLabel_New(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        public void PrintParentLabel_NewAsync(Person parent1, Person parent2, string printer) {
            this.PrintParentLabel_NewAsync(parent1, parent2, printer, null);
        }
        
        public void PrintParentLabel_NewAsync(Person parent1, Person parent2, string printer, object userState) {
            if ((this.PrintParentLabel_NewOperationCompleted == null)) {
                this.PrintParentLabel_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPrintParentLabel_NewCompleted);
            }
            this.InvokeAsync("PrintParentLabel_New", new object[] {
                        parent1,
                        parent2,
                        printer}, this.PrintParentLabel_NewOperationCompleted, userState);
        }
        
        private void OnPrintParentLabel_NewCompleted(object arg) {
            if ((this.PrintParentLabel_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PrintParentLabel_NewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getClasses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public ClassInfo[] getClasses() {
            object[] results = this.Invoke("getClasses", new object[0]);
            return ((ClassInfo[])(results[0]));
        }
        
        public System.IAsyncResult BegingetClasses(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getClasses", new object[0], callback, asyncState);
        }
        
        public ClassInfo[] EndgetClasses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ClassInfo[])(results[0]));
        }
        
        public void getClassesAsync() {
            this.getClassesAsync(null);
        }
        
        public void getClassesAsync(object userState) {
            if ((this.getClassesOperationCompleted == null)) {
                this.getClassesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClassesCompleted);
            }
            this.InvokeAsync("getClasses", new object[0], this.getClassesOperationCompleted, userState);
        }
        
        private void OngetClassesCompleted(object arg) {
            if ((this.getClassesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClassesCompleted(this, new getClassesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckIn", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public bool CheckIn(int ChildID, int ClassID, int InOut) {
            object[] results = this.Invoke("CheckIn", new object[] {
                        ChildID,
                        ClassID,
                        InOut});
            return ((bool)(results[0]));
        }
        
        public System.IAsyncResult BeginCheckIn(int ChildID, int ClassID, int InOut, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckIn", new object[] {
                        ChildID,
                        ClassID,
                        InOut}, callback, asyncState);
        }
        
        public bool EndCheckIn(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        public void CheckInAsync(int ChildID, int ClassID, int InOut) {
            this.CheckInAsync(ChildID, ClassID, InOut, null);
        }
        
        public void CheckInAsync(int ChildID, int ClassID, int InOut, object userState) {
            if ((this.CheckInOperationCompleted == null)) {
                this.CheckInOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInCompleted);
            }
            this.InvokeAsync("CheckIn", new object[] {
                        ChildID,
                        ClassID,
                        InOut}, this.CheckInOperationCompleted, userState);
        }
        
        private void OnCheckInCompleted(object arg) {
            if ((this.CheckInCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInCompleted(this, new CheckInCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getKidsInCare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, Use=System.Web.Services.Description.SoapBindingUse.Literal)]
        public CareInfo[] getKidsInCare(int Checkin) {
            object[] results = this.Invoke("getKidsInCare", new object[] {
                        Checkin});
            return ((CareInfo[])(results[0]));
        }
        
        public System.IAsyncResult BegingetKidsInCare(int Checkin, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getKidsInCare", new object[] {
                        Checkin}, callback, asyncState);
        }
        
        public CareInfo[] EndgetKidsInCare(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((CareInfo[])(results[0]));
        }
        
        public void getKidsInCareAsync(int Checkin) {
            this.getKidsInCareAsync(Checkin, null);
        }
        
        public void getKidsInCareAsync(int Checkin, object userState) {
            if ((this.getKidsInCareOperationCompleted == null)) {
                this.getKidsInCareOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetKidsInCareCompleted);
            }
            this.InvokeAsync("getKidsInCare", new object[] {
                        Checkin}, this.getKidsInCareOperationCompleted, userState);
        }
        
        private void OngetKidsInCareCompleted(object arg) {
            if ((this.getKidsInCareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getKidsInCareCompleted(this, new getKidsInCareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class HouseholdInfo {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public string HeadSurname;
        
        /// <remarks/>
        public string HeadFirstNames;
        
        /// <remarks/>
        public string SpouseSurname;
        
        /// <remarks/>
        public string SpouseFirstNames;
        
        /// <remarks/>
        public string CombinedName;
        
        /// <remarks/>
        public string HeadMobile;
        
        /// <remarks/>
        public string SpouseMobile;
        
        /// <remarks/>
        public string HeadEMail;
        
        /// <remarks/>
        public string SpouseEMail;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Person {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int CampusID;
        
        /// <remarks/>
        public string FirstName;
        
        /// <remarks/>
        public string LastName;
        
        /// <remarks/>
        public string Gender;
        
        /// <remarks/>
        public System.DateTime DoB;
        
        /// <remarks/>
        public int Grade;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public string Mobile;
        
        /// <remarks/>
        public string EMail;
        
        /// <remarks/>
        public bool IsTemporary;
        
        /// <remarks/>
        public int MarriedRelationshipID;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ChildrenInfo {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public int HouseholdID;
        
        /// <remarks/>
        public string FirstNames;
        
        /// <remarks/>
        public string Surname;
        
        /// <remarks/>
        public System.DateTime DoB;
        
        /// <remarks/>
        public string Gender;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public int GradeIndex;
        
        /// <remarks/>
        public string CombinedName;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ClassInfo {
        
        /// <remarks/>
        public int ID;
        
        /// <remarks/>
        public string Description;
        
        /// <remarks/>
        public int AgeFrom;
        
        /// <remarks/>
        public int AgeTo;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17020")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CareInfo {
        
        /// <remarks/>
        public string ClassName;
        
        /// <remarks/>
        public string ChildName;
        
        /// <remarks/>
        public string Gender;
        
        /// <remarks/>
        public string Comments;
        
        /// <remarks/>
        public int HouseholdID;
        
        /// <remarks/>
        public System.DateTime DateStamp;
        
        /// <remarks/>
        public System.DateTime OutStamp;
    }
    
    public partial class getHouseholdsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHouseholdsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HouseholdInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HouseholdInfo[])(this.results[0]));
            }
        }
    }
    
    public delegate void getHouseholdsCompletedEventHandler(object sender, getHouseholdsCompletedEventArgs args);
    
    public delegate void PrintBirthdayLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public delegate void PrintBirthdayLabel_NewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public partial class getHouseholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHouseholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public HouseholdInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((HouseholdInfo)(this.results[0]));
            }
        }
    }
    
    public delegate void getHouseholdCompletedEventHandler(object sender, getHouseholdCompletedEventArgs args);
    
    public partial class getChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ChildrenInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChildrenInfo[])(this.results[0]));
            }
        }
    }
    
    public delegate void getChildrenCompletedEventHandler(object sender, getChildrenCompletedEventArgs args);
    
    public partial class getChildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getChildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ChildrenInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChildrenInfo)(this.results[0]));
            }
        }
    }
    
    public delegate void getChildCompletedEventHandler(object sender, getChildCompletedEventArgs args);
    
    public partial class updateHouseholdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateHouseholdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void updateHouseholdCompletedEventHandler(object sender, updateHouseholdCompletedEventArgs args);
    
    public partial class updateChildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateChildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    public delegate void updateChildCompletedEventHandler(object sender, updateChildCompletedEventArgs args);
    
    public delegate void PrintChildLabel_NewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public delegate void PrintChildLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public delegate void PrintParentLabelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public delegate void PrintParentLabel_NewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs args);
    
    public partial class getClassesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClassesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ClassInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClassInfo[])(this.results[0]));
            }
        }
    }
    
    public delegate void getClassesCompletedEventHandler(object sender, getClassesCompletedEventArgs args);
    
    public partial class CheckInCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    public delegate void CheckInCompletedEventHandler(object sender, CheckInCompletedEventArgs args);
    
    public partial class getKidsInCareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getKidsInCareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CareInfo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CareInfo[])(this.results[0]));
            }
        }
    }
    
    public delegate void getKidsInCareCompletedEventHandler(object sender, getKidsInCareCompletedEventArgs args);
}
